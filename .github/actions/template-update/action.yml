---
name: "Template Update"
description: "Update the template files"
inputs:
  base-directory:
    description: "The base directory to update"
    required: true
    default: "."
  enable-pull-request:
    description: "Whether to create a pull request"
    required: true
  pull-request-title:
    description: "The title of the pull request"
    required: false
    default: ""
  template-repository:
    description: "The template repository to update"
    required: true
  template-branch:
    description: "The branch to update"
    required: false
    default: main
  template-files:
    description: "The template files to update"
    required: true
  upstream-token:
    description: "The token to used to authenticate with the upstream repository (optional, defaults to github.token)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout Upstream Repository
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.upstream-token || github.token }}
        branch: ${{ inputs.template-branch }}
        repository: ${{ inputs.template-repository }}
        path: ./tmp/upstream-template
    - name: Copying Files from Upstream Repository
      shell: bash
      run: |
        # Process template files - handle both newline and space separated inputs
        echo "${{ inputs.template-files }}" | while IFS= read -r file; do
          # Skip empty lines
          if [[ -n "${file}" ]]; then
            if [[ -f "./tmp/upstream-template/${file}" ]]; then
              echo "Copying file ${file} from upstream template to ${{ inputs.base-directory }}/${file}"
              cp -f "./tmp/upstream-template/${file}" "${{ inputs.base-directory }}/${file}"
            else 
              echo "File ${file} not found in upstream template"
            fi
          fi
        done
        # Remove the temporary directory
        rm -rf ./tmp/upstream-template
    - name: Check for Changes
      id: has-changes
      shell: bash
      run: |
        echo "Current directory: $(pwd)"

        if [[ -n "$(git diff --name-only)" ]]; then
          echo "Changes detected in files"
          echo "has-changes=true" >> "$GITHUB_OUTPUT"
        else
          echo "No changes detected in files"
          echo "has-changes=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Create Pull Request
      if: steps.has-changes.outputs.has-changes == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        base: main
        body: "This PR is updating the templates to the latest version inline with the official ${{ inputs.template-repository }}"
        branch: update/${{ github.run_id }}
        commit-message: "chore(deps): updating the templates inline with the official ${{ inputs.template-repository }}"
        delete-branch: true
        title: "${{ inputs.pull-request-title }} | [UPDATE] - Updating Templates inline with ${{ inputs.template-repository }}"
        token: ${{ github.token }}
